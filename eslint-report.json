[{"filePath":"/workspace/luckymart-tj/components/lazy/index.ts","messages":[{"ruleId":"@typescript-eslint/prefer-const","message":"Definition for rule '@typescript-eslint/prefer-const' was not found.","line":1,"column":1,"endLine":1,"endColumn":2,"severity":2,"nodeType":null},{"ruleId":"unicorn/prefer-destructuring","message":"Definition for rule 'unicorn/prefer-destructuring' was not found.","line":1,"column":1,"endLine":1,"endColumn":2,"severity":2,"nodeType":null},{"ruleId":"no-unused-vars","severity":2,"message":"'index' is defined but never used. Allowed unused args must match /^_/u.","line":44,"column":26,"nodeType":"Identifier","messageId":"unusedVar","endLine":44,"endColumn":39},{"ruleId":"no-unused-vars","severity":2,"message":"'item' is defined but never used. Allowed unused args must match /^_/u.","line":46,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":46,"endColumn":23},{"ruleId":"no-unused-vars","severity":2,"message":"'index' is defined but never used. Allowed unused args must match /^_/u.","line":46,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":46,"endColumn":38},{"ruleId":"no-unused-vars","severity":2,"message":"'scrollTop' is defined but never used. Allowed unused args must match /^_/u.","line":52,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":52,"endColumn":32},{"ruleId":"no-unused-vars","severity":2,"message":"'item' is defined but never used. Allowed unused args must match /^_/u.","line":61,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":61,"endColumn":23},{"ruleId":"no-unused-vars","severity":2,"message":"'index' is defined but never used. Allowed unused args must match /^_/u.","line":61,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":61,"endColumn":38},{"ruleId":"no-unused-vars","severity":2,"message":"'scrollTop' is defined but never used. Allowed unused args must match /^_/u.","line":67,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":67,"endColumn":32},{"ruleId":"no-unused-vars","severity":2,"message":"'imageId' is defined but never used. Allowed unused args must match /^_/u.","line":83,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":83,"endColumn":33},{"ruleId":"no-unused-vars","severity":2,"message":"'imageId' is defined but never used. Allowed unused args must match /^_/u.","line":84,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":84,"endColumn":34},{"ruleId":"no-unused-vars","severity":2,"message":"'error' is defined but never used. Allowed unused args must match /^_/u.","line":84,"column":36,"nodeType":"Identifier","messageId":"unusedVar","endLine":84,"endColumn":48},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":93,"column":60,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":93,"endColumn":63,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2476,2479],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2476,2479],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":102,"column":20,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":102,"endColumn":23,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2712,2715],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2712,2715],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":104,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":104,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2734,2737],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2734,2737],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'error' is defined but never used. Allowed unused args must match /^_/u.","line":106,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":106,"endColumn":26}],"suppressedMessages":[],"errorCount":13,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// 懒加载组件索引文件\n// Lazy Loading Components Index\n\n// 核心组件\nexport { default as LazyImage } from './LazyImage';\nexport { default as VirtualizedList } from './VirtualizedList';\nexport { default as VirtualizedGrid } from './VirtualizedGrid';\nexport { default as VirtualImageGrid } from './VirtualImageGrid';\nexport { default as LazyImageGrid } from './LazyImageGrid';\nexport { default as SmartComponentLoader } from './SmartComponentLoader';\nexport { default as RouteLoader } from './RouteLoader';\n\n// 组件配置\nexport { ComponentConfigs } from './SmartComponentLoader';\nexport { LazyComponents } from './RouteLoader';\n\n// Hooks\nexport { useVirtualList } from './VirtualizedList';\nexport { useVirtualGrid } from './VirtualizedGrid';\n\n// 类型定义\nexport interface LazyImageProps {\n  src: string;\n  alt: string;\n  width?: number;\n  height?: number;\n  className?: string;\n  placeholder?: 'blur' | 'empty';\n  blurDataURL?: string;\n  quality?: number;\n  priority?: boolean;\n  loading?: 'lazy' | 'eager';\n  onLoad?: () => void;\n  onError?: () => void;\n  sizes?: string;\n  srcSet?: string;\n  fallbackSrc?: string;\n  cacheKey?: string;\n  ttl?: number;\n}\n\nexport interface VirtualizedListProps<T> {\n  items: T[];\n  itemHeight: number | ((index: number) => number);\n  containerHeight: number;\n  renderItem: (item: T, index: number) => React.ReactNode;\n  overscan?: number;\n  className?: string;\n  onEndReached?: () => void;\n  onEndReachedThreshold?: number;\n  scrollToIndex?: number;\n  onScroll?: (scrollTop: number) => void;\n}\n\nexport interface VirtualizedGridProps<T> {\n  items: T[];\n  itemHeight: number;\n  containerHeight: number;\n  columns: number;\n  gap?: number;\n  renderItem: (item: T, index: number) => React.ReactNode;\n  overscan?: number;\n  className?: string;\n  onEndReached?: () => void;\n  onEndReachedThreshold?: number;\n  scrollToIndex?: number;\n  onScroll?: (scrollTop: number) => void;\n}\n\nexport interface VirtualImageGridProps {\n  images: Array<{\n    id: string;\n    src: string;\n    alt: string;\n    width?: number;\n    height?: number;\n    category?: string;\n  }>;\n  columns?: number;\n  gap?: number;\n  className?: string;\n  itemHeight?: number;\n  onImageLoad?: (imageId: string) => void;\n  onImageError?: (imageId: string, error: Error) => void;\n  placeholder?: 'blur' | 'empty';\n  quality?: number;\n  enableVirtualization?: boolean;\n  containerHeight?: number;\n}\n\nexport interface SmartComponentLoaderProps {\n  config: {\n    importFn: () => Promise<{ default: React.ComponentType<any> }>;\n    loadingComponent?: React.ComponentType;\n    fallbackComponent?: React.ComponentType;\n    strategy: {\n      immediate: boolean;\n      lazy: boolean;\n      prefetch: boolean;\n      priority: number;\n    };\n    dependencies?: any[];\n  };\n  props?: any;\n  onLoad?: () => void;\n  onError?: (error: Error) => void;\n}\n\nexport interface RouteLoaderProps {\n  children: React.ReactNode;\n  priority?: 'core' | 'secondary' | 'admin';\n  fallback?: React.ReactNode;\n  showStats?: boolean;\n}\n\n// 使用示例\n\n/**\n * 基础图片懒加载示例\n * \n * ```tsx\n * import { LazyImage } from '@/components/lazy';\n * \n * function MyComponent() {\n *   return (\n *     <LazyImage\n *       src=\"/path/to/image.jpg\"\n *       alt=\"示例图片\"\n *       width={300}\n *       height={200}\n *       placeholder=\"blur\"\n *       quality={85}\n *       priority={false}\n *       onLoad={() => console.log('图片加载完成')}\n *       onError={(error) => console.error('图片加载失败', error)}\n *     />\n *   );\n * }\n * ```\n */\n\n/**\n * 虚拟滚动列表示例\n * \n * ```tsx\n * import { VirtualizedList } from '@/components/lazy';\n * \n * interface Item {\n *   id: string;\n *   title: string;\n *   description: string;\n * }\n * \n * function VirtualList({ items }: { items: Item[] }) {\n *   return (\n *     <VirtualizedList\n *       items={items}\n *       itemHeight={80}\n *       containerHeight={600}\n *       renderItem={(item) => (\n *         <div className=\"p-4 border-b\">\n *           <h3>{item.title}</h3>\n *           <p>{item.description}</p>\n *         </div>\n *       )}\n *       onEndReached={() => {\n *         // 加载更多数据\n *         loadMoreItems();\n *       }}\n *     />\n *   );\n * }\n * ```\n */\n\n/**\n * 虚拟图片网格示例\n * \n * ```tsx\n * import { VirtualImageGrid } from '@/components/lazy';\n * \n * function ImageGallery({ images }: { images: ImageItem[] }) {\n *   return (\n *     <VirtualImageGrid\n *       images={images}\n *       columns={3}\n *       gap={16}\n *       itemHeight={200}\n *       enableVirtualization={true}\n *       onImageLoad={(imageId) => console.log(`图片 ${imageId} 加载完成`)}\n *       onImageError={(imageId, error) => console.error(`图片 ${imageId} 加载失败`, error)}\n *     />\n *   );\n * }\n * ```\n */\n\n/**\n * 智能组件懒加载示例\n * \n * ```tsx\n * import { SmartComponentLoader, ComponentConfigs } from '@/components/lazy';\n * \n * function MyComponent() {\n *   return (\n *     <SmartComponentLoader\n *       config={ComponentConfigs.LotteryCard}\n *       props={{ roundId: '123' }}\n *       onLoad={() => console.log('组件加载完成')}\n *       onError={(error) => console.error('组件加载失败', error)}\n *     />\n *   );\n * }\n * ```\n */\n\n/**\n * 路由懒加载示例\n * \n * ```tsx\n * import { RouteLoader } from '@/components/lazy';\n * \n * function AppLayout() {\n *   return (\n *     <RouteLoader priority=\"core\" showStats={true}>\n *       <YourAppContent />\n *     </RouteLoader>\n *   );\n * }\n * ```\n */","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/no-var-requires","replacedBy":["@typescript-eslint/no-require-imports"]}]}]