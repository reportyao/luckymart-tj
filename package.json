{
  "name": "luckymart-tj",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate deploy",
    "bot:dev": "tsx bot/start.ts",
    "bot:build": "tsc bot/index.ts --outDir dist --moduleResolution node",
    "pm2:start": "pm2 start ecosystem.bot.json",
    "pm2:stop": "pm2 stop luckymart-bot",
    "pm2:restart": "pm2 restart luckymart-bot",
    "pm2:logs": "pm2 logs luckymart-bot",
    "cache:dev": "tsx lib/cache-init.ts init",
    "cache:start": "node -r ts-node/register lib/cache-init.ts init",
    "cache:status": "node -r ts-node/register lib/cache-init.ts status",
    "cache:stop": "node -r ts-node/register lib/cache-init.ts shutdown",
    "cache:health": "node -r ts-node/register lib/cache-init.ts health-check",
    "cache:preload": "node -r ts-node/register lib/cache-init.ts preload",
    "cache:cleanup": "node -r ts-node/register lib/cache-init.ts cleanup",
    "test:cache": "tsx test/cache-system.test.ts",
    
    "benchmark": "tsx scripts/benchmark-performance.ts",
    "benchmark:compare": "tsx scripts/benchmark-performance.ts compare",
    "benchmark:stress": "tsx scripts/benchmark-performance.ts stress",
    "test:performance": "tsx test-n-plus-one-fixes.ts",
    "check:n-plus-one": "node -e \"require('./lib/n-plus-one-detector').NPlusOneDetector.enableMonitoring(); console.log('N+1检测已启用');\"",
    "optimize:deploy": "./deploy-n-plus-one-fixes.sh",
    "optimize:verify": "tsx test-n-plus-one-fixes.ts && npm run benchmark",
    
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest __tests__/",
    "test:integration": "jest __tests__/database-transactions.test.ts test/",
    "test:auth": "jest __tests__/auth.test.ts",
    "test:lottery": "jest __tests__/lottery-algorithm.test.ts",
    "test:business": "jest __tests__/business-flow.test.ts",
    "test:security": "jest __tests__/api-security.test.ts",
    "test:performance-suite": "jest __tests__/performance-cache.test.ts",
    "test:bot": "jest __tests__/bot-fault-tolerance.test.ts",
    "test:all": "tsx run-all-tests.ts",
    "test:report": "npm run test:all && npm run test:coverage",
    
    "type-check": "tsc --noEmit --strict",
    "lint:fix": "next lint --fix",
    "security-check": "tsx scripts/check-types.ts security",
    "quality-check": "tsx scripts/check-types.ts quality", 
    "static-analysis": "tsx scripts/check-types.ts static",
    "pre-commit": "bash scripts/pre-commit-check.sh",
    "check:all": "npm run type-check && npm run lint && npm run static-analysis"
  },
  "dependencies": {
    "@prisma/client": "^6.18.0",
    "@supabase/supabase-js": "^2.46.1",
    "bcryptjs": "^2.4.3",
    "dotenv": "^16.4.7",
    "ioredis": "^5.4.1",
    "jsonwebtoken": "^9.0.2",
    "next": "^14.2.33",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "telegraf": "^4.16.3"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/ioredis": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/node": "^20.14.15",
    "@types/react": "^18.3.5",
    "@types/react-dom": "^18.3.0",
    "autoprefixer": "^10.4.20",
    "eslint": "^8.57.1",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "node-mocks-http": "^1.14.1",
    "postcss": "^8.4.47",
    "prisma": "^6.18.0",
    "tailwindcss": "^3.4.10",
    "ts-jest": "^29.2.5",
    "tsx": "^4.19.2",
    "typescript": "^5.6.2"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^@/(.*)$": "<rootDir>/$1"
    },
    "testMatch": [
      "**/__tests__/**/*.test.ts",
      "**/test/**/*.test.ts",
      "**/*.test.ts"
    ],
    "collectCoverageFrom": [
      "lib/**/*.{ts,tsx}",
      "app/api/**/*.{ts,tsx}",
      "bot/**/*.{ts,tsx}",
      "components/**/*.{ts,tsx}",
      "contexts/**/*.{ts,tsx}",
      "hooks/**/*.{ts,tsx}",
      "!**/*.d.ts",
      "!**/node_modules/**",
      "!**/.next/**",
      "!**/coverage/**"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    }
  }
}
