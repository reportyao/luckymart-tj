// Prisma Schema for LuckyMart TJ
// 注意：根据Supabase最佳实践，不使用Prisma relations，手动查询关联数据

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                      String              @id @default(uuid()) @db.Uuid
  telegramId              String              @unique @map("telegram_id")
  username                String?             @db.VarChar(255)
  firstName               String              @map("first_name") @db.VarChar(255)
  lastName                String?             @map("last_name") @db.VarChar(255)
  avatarUrl               String?             @map("avatar_url")
  preferredLanguage       String              @default("tg-TJ") @map("preferred_language") @db.VarChar(10)
  balance                 Decimal             @default(0) @db.Decimal(10, 2)
  balanceVersion          Int                 @default(1) @map("balance_version")
  platformBalance         Decimal             @default(0) @map("platform_balance") @db.Decimal(10, 2)
  platformBalanceVersion  Int                 @default(1) @map("platform_balance_version")
  luckyCoins              Decimal             @default(0) @map("lucky_coins") @db.Decimal(10, 2)
  luckyCoinsVersion       Int                 @default(1) @map("lucky_coins_version")
  vipLevel                Int                 @default(0) @map("vip_level")
  totalSpent              Decimal             @default(0) @map("total_spent") @db.Decimal(10, 2)
  freeDailyCount          Int                 @default(0) @map("free_daily_count")
  lastFreeResetDate       DateTime            @default(now()) @map("last_free_reset_date") @db.Date
  // 邀请系统相关字段
  referralCode            String?             @unique @map("referral_code") @db.VarChar(10)
  referredByUserId        String?             @map("referred_by_user_id") @db.Uuid
  referralLevel           Int                 @default(1) @map("referral_level")
  createdAt               DateTime            @default(now()) @map("created_at")
  updatedAt               DateTime            @default(now()) @updatedAt @map("updated_at")

  @@index([preferredLanguage])
  @@index([luckyCoins])
  @@index([luckyCoinsVersion])
  @@index([referralCode])
  @@index([referredByUserId])
  @@index([createdAt])
}

model userAddresses {
  id            String   @id @default(uuid()) @db.Uuid @map("id")
  userId        String   @map("user_id") @db.Uuid
  recipientName String   @map("recipient_name") @db.VarChar(255)
  phone         String   @db.VarChar(50)
  city          String   @db.VarChar(100)
  district      String?  @db.VarChar(100)
  addressLine   String   @map("address_line")
  postalCode    String?  @map("postal_code") @db.VarChar(20)
  isDefault     Boolean  @default(false) @map("is_default")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
  @@index([userId, isDefault])
  @@map("user_addresses")
}

model products {
  id                        String   @id @default(uuid()) @db.Uuid
  
  // 多语言JSONB字段（新架构）
  nameMultilingual          Json?    @map("name_multilingual") @db.JsonB
  descriptionMultilingual   Json?    @map("description_multilingual") @db.JsonB
  categoryMultilingual      Json?    @map("category_multilingual") @db.JsonB
  
  // 兼容原有字段（逐步淘汰）
  nameZh                    String?  @map("name_zh") @db.VarChar(255)
  nameEn                    String?  @map("name_en") @db.VarChar(255)
  nameRu                    String?  @map("name_ru") @db.VarChar(255)
  descriptionZh             String?  @map("description_zh")
  descriptionEn             String?  @map("description_en")
  descriptionRu             String?  @map("description_ru")
  category                  String?  @db.VarChar(100)
  
  images                    String[]
  marketPrice               Decimal  @map("market_price") @db.Decimal(10, 2)
  totalShares               Int      @map("total_shares")
  pricePerShare             Decimal  @default(1.00) @map("price_per_share") @db.Decimal(10, 2)
  stock                     Int      @default(0)
  status                    String   @default("active") @db.VarChar(20)
  marketingBadge            Json?    @map("marketing_badge")
  createdAt                 DateTime @default(now()) @map("created_at")
  updatedAt                 DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([status])
  @@index([category])
  @@index([status, category])
}

model lotteryRounds {
  id                    String   @id @default(uuid()) @db.Uuid
  productId             String   @map("product_id") @db.Uuid
  roundNumber           Int      @map("round_number")
  totalShares           Int      @map("total_shares")
  pricePerShare         Decimal  @default(1.00) @map("price_per_share") @db.Decimal(10, 2)
  soldShares            Int      @default(0) @map("sold_shares")
  soldSharesVersion     Int      @default(1) @map("sold_shares_version")
  status                String   @default("active") @db.VarChar(20)
  winnerUserId          String?  @map("winner_user_id") @db.Uuid
  winningNumber         Int?     @map("winning_number")
  drawTime              DateTime? @map("draw_time")
  drawAlgorithmData     Json?    @map("draw_algorithm_data")
  participants          Int      @default(0)
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @default(now()) @updatedAt @map("updated_at")

  @@unique([productId, roundNumber])
  @@index([productId])
  @@index([status])
  @@map("lottery_rounds")
}

model participations {
  id          String   @id @default(uuid()) @db.Uuid
  userId      String   @map("user_id") @db.Uuid
  roundId     String   @map("round_id") @db.Uuid
  productId   String   @map("product_id") @db.Uuid
  numbers     Int[]
  sharesCount Int      @map("shares_count")
  type        String   @db.VarChar(10)
  cost        Decimal  @default(0) @db.Decimal(10, 2)
  version     Int      @default(1)
  isWinner    Boolean  @default(false) @map("is_winner")
  createdAt   DateTime @default(now()) @map("created_at")

  @@index([userId, roundId])
  @@index([roundId])
  @@index([isWinner])
}

model orders {
  id                String   @id @default(uuid()) @db.Uuid
  orderNumber       String   @unique @map("order_number") @db.VarChar(50)
  userId            String   @map("user_id") @db.Uuid
  roundId           String?  @map("round_id") @db.Uuid
  productId         String?  @map("product_id") @db.Uuid
  type              String   @db.VarChar(20)
  quantity          Int      @default(1)
  totalAmount       Decimal  @map("total_amount") @db.Decimal(10, 2)
  status            String   @default("pending") @db.VarChar(20)
  version           Int      @default(1)
  paymentMethod     String?  @map("payment_method") @db.VarChar(50)
  paymentStatus     String   @default("pending") @map("payment_status") @db.VarChar(20)
  fulfillmentStatus String   @default("pending") @map("fulfillment_status") @db.VarChar(20)
  shippingAddress   Json?    @map("shipping_address")
  trackingNumber    String?  @map("tracking_number") @db.VarChar(255)
  notes             String?
  // 转售相关字段
  isResale          Boolean  @default(false) @map("is_resale")
  resalePrice       Decimal? @map("resale_price") @db.Decimal(10, 2)
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
  @@index([orderNumber])
  @@index([status])
  @@index([paymentStatus])
  @@index([fulfillmentStatus])
  @@index([userId, createdAt])
  @@index([status, createdAt])
}

model transactions {
  id             String   @id @default(uuid()) @db.Uuid
  userId         String   @map("user_id") @db.Uuid
  type           String   @db.VarChar(50)
  amount         Decimal  @db.Decimal(10, 2)
  balanceType    String   @map("balance_type") @db.VarChar(20)
  relatedOrderId String?  @map("related_order_id") @db.Uuid
  description    String?
  createdAt      DateTime @default(now()) @map("created_at")

  @@index([userId])
  @@index([type])
  @@index([createdAt])
}

model resaleListings {
  id           String    @id @default(uuid()) @db.Uuid
  sellerUserId String    @map("seller_user_id") @db.Uuid
  buyerUserId  String?   @map("buyer_user_id") @db.Uuid
  orderId      String    @map("order_id") @db.Uuid
  productId    String?   @map("product_id") @db.Uuid
  listingPrice Decimal   @map("listing_price") @db.Decimal(10, 2)
  platformFee  Decimal   @map("platform_fee") @db.Decimal(10, 2)
  status       String    @default("pending") @db.VarChar(20)
  listedAt     DateTime  @default(now()) @map("listed_at")
  soldAt       DateTime? @map("sold_at")

  @@index([sellerUserId])
  @@index([status])
  @@index([orderId])
  @@map("resale_listings")
}

model withdrawRequests {
  id             String    @id @default(uuid()) @db.Uuid
  userId         String    @map("user_id") @db.Uuid
  amount         Decimal   @db.Decimal(10, 2)
  fee            Decimal   @db.Decimal(10, 2)
  actualAmount   Decimal   @map("actual_amount") @db.Decimal(10, 2)
  withdrawMethod String    @map("withdraw_method") @db.VarChar(20)
  accountInfo    Json      @map("account_info")
  status         String    @default("pending") @db.VarChar(20)
  rejectReason   String?   @map("reject_reason")
  adminNote      String?   @map("admin_note")
  processedAt    DateTime? @map("processed_at")
  createdAt      DateTime  @default(now()) @map("created_at")

  @@index([userId])
  @@index([status])
  @@index([createdAt])
  @@map("withdraw_requests")
}

model rechargePackages {
  id                String   @id @default(uuid()) @db.Uuid
  
  // 多语言JSONB字段（新架构）
  nameMultilingual  Json?    @map("name_multilingual") @db.JsonB
  
  // 兼容原有字段（逐步淘汰）
  nameZh            String?  @map("name_zh") @db.VarChar(255)
  nameEn            String?  @map("name_en") @db.VarChar(255)
  nameRu            String?  @map("name_ru") @db.VarChar(255)
  
  price             Decimal  @db.Decimal(10, 2)
  coins             Int
  bonusCoins        Int      @default(0) @map("bonus_coins")
  isActive          Boolean  @default(true) @map("is_active")
  sortOrder         Int      @default(0) @map("sort_order")
  createdAt         DateTime @default(now()) @map("created_at")

  @@map("recharge_packages")
}

model notifications {
  id        String    @id @default(uuid()) @db.Uuid
  userId    String    @map("user_id") @db.Uuid
  type      String    @db.VarChar(50)
  content   String
  status    String    @default("pending") @db.VarChar(20)
  error     String?
  sentAt    DateTime? @map("sent_at")
  createdAt DateTime  @default(now()) @map("created_at")

  @@index([userId])
  @@index([status])
}

model admins {
  id           String    @id @default(uuid()) @db.Uuid
  username     String    @unique @db.VarChar(255)
  passwordHash String    @map("password_hash") @db.VarChar(255)
  role         String    @default("admin") @db.VarChar(50)
  isActive     Boolean   @default(true) @map("is_active")
  lastLogin    DateTime? @map("last_login")
  createdAt    DateTime  @default(now()) @map("created_at")
  
  @@index([role, isActive])
}

model processingLogs {
  id            String    @id @default(uuid()) @db.Uuid
  entityId      String    @map("entity_id") @db.Uuid
  operationType String    @map("operation_type") @db.VarChar(100)
  status        String    @db.VarChar(20) // 'processing', 'completed', 'failed'
  requestId     String?   @map("request_id") @db.VarChar(255)
  errorMessage  String?   @map("error_message")
  data          Json?
  createdAt     DateTime  @default(now()) @map("created_at")
  completedAt   DateTime? @map("completed_at")

  @@index([entityId, operationType])
  @@index([status])
  @@index([requestId])
  @@index([createdAt])
  @@map("processing_logs")
}

model walletTransactions {
  id          String    @id @default(uuid()) @db.Uuid
  userId      String    @map("user_id") @db.Uuid
  type        String    @db.VarChar(50) // 'recharge', 'transfer_in', 'transfer_out', 'purchase', 'reward'
  amount      Decimal?  @db.Decimal(10, 2) // 余额变动金额
  luckyCoins  Decimal?  @db.Decimal(10, 2) // 幸运币变动数量
  currency    String    @default("TJS") @db.VarChar(10)
  description String?
  status      String    @default("completed") @db.VarChar(20) // 'pending', 'completed', 'failed'
  metadata    Json?
  createdAt   DateTime  @default(now()) @map("created_at")

  @@index([userId])
  @@index([type])
  @@index([status])
  @@index([createdAt])
  @@map("wallet_transactions")
}

// ================================
// 新手激励系统相关模型 (Newbie Incentive System)
// ================================

// 新手任务定义表
model NewbieTasks {
  id                String   @id @default(uuid()) @db.Uuid
  
  // 多语言字段支持
  taskName          Json     @map("task_name") @db.JsonB // {"zh": "任务名称", "en": "Task Name", "ru": "Название задачи"}
  description       Json?    @map("description") @db.JsonB // {"zh": "任务描述", "en": "Task Description", "ru": "Описание задачи"}
  
  // 兼容原有字段（逐步淘汰）
  taskNameZh        String?  @map("task_name_zh") @db.VarChar(255)
  taskNameEn        String?  @map("task_name_en") @db.VarChar(255)
  taskNameRu        String?  @map("task_name_ru") @db.VarChar(255)
  descriptionZh     String?  @map("description_zh")
  descriptionEn     String?  @map("description_en")
  descriptionRu     String?  @map("description_ru")
  
  taskType          String   @map("task_type") @db.VarChar(50) // 'registration', 'first_recharge', 'lottery_participation', 'product_purchase'
  rewardType        String   @map("reward_type") @db.VarChar(30) // 'coins', 'balance', 'vip_days'
  rewardAmount      Decimal  @map("reward_amount") @db.Decimal(10, 2)
  priority          Int      @default(0) // 任务优先级，用于排序显示
  isActive          Boolean  @default(true) @map("is_active")
  maxRewardsPerDay  Int?     @map("max_rewards_per_day") // 每日最大奖励次数
  maxRewardsTotal   Int?     @map("max_rewards_total") // 总最大奖励次数
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([taskType])
  @@index([isActive])
  @@index([priority])
  @@map("newbie_tasks")
}

// 用户任务进度表
model UserTaskProgress {
  id                String   @id @default(uuid()) @db.Uuid
  userId            String   @map("user_id") @db.Uuid
  taskId            String   @map("task_id") @db.Uuid
  status            String   @default("pending") @db.VarChar(20) // 'pending', 'in_progress', 'completed', 'claimed'
  currentProgress   Int      @default(0) @map("current_progress") // 当前进度
  targetProgress    Int      @default(1) @map("target_progress") // 目标进度
  completionRate    Decimal  @default(0) @map("completion_rate") @db.Decimal(5, 2) // 完成百分比
  claimableAmount   Decimal  @default(0) @map("claimable_amount") @db.Decimal(10, 2) // 可领取金额
  claimedAmount     Decimal  @default(0) @map("claimed_amount") @db.Decimal(10, 2) // 已领取金额
  startedAt         DateTime? @map("started_at")
  completedAt       DateTime? @map("completed_at")
  claimedAt         DateTime? @map("claimed_at")
  expiresAt         DateTime? @map("expires_at")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
  @@index([taskId])
  @@index([userId, taskId])
  @@index([status])
  @@index([completedAt])
  @@unique([userId, taskId])
  @@map("user_task_progress")
}

// 签到记录表
model CheckInRecords {
  id                String   @id @default(uuid()) @db.Uuid
  userId            String   @map("user_id") @db.Uuid
  checkInDate       DateTime @map("check_in_date") @db.Date
  consecutiveDays   Int      @default(1) @map("consecutive_days") // 连续签到天数
  cycleDay          Int      @default(1) @map("cycle_day") // 当前7天周期中的第几天 (1-7)
  isDoubleReward    Boolean  @default(false) @map("is_double_reward") // 是否为双倍奖励日
  rewardAmount      Decimal  @default(0) @map("reward_amount") @db.Decimal(10, 2)
  rewardType        String   @default("coins") @map("reward_type") @db.VarChar(30) // 'coins', 'balance', 'vip_days'
  status            String   @default("claimed") @db.VarChar(20) // 'claimed', 'missed', 'expired'
  claimedAt         DateTime @default(now()) @map("claimed_at")
  notes             String?  @db.Text
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
  @@index([userId, checkInDate])
  @@index([status])
  @@index([consecutiveDays])
  @@unique([userId, checkInDate])
  @@map("check_in_records")
}

// 首充奖励记录表
model FirstRechargeRewards {
  id           String   @id @default(uuid()) @db.Uuid
  userId       String   @map("user_id") @db.Uuid
  rechargeAmount Decimal @default(0) @map("recharge_amount") @db.Decimal(10, 2)
  orderId      String?  @map("order_id") @db.Uuid
  rewardType   String   @map("reward_type") @db.VarChar(50) // 'lucky_coins'
  rewardAmount Decimal  @default(0) @map("reward_amount") @db.Decimal(10, 2) // 幸运币数量
  status       String   @default("pending") @db.VarChar(20) // 'pending', 'claimed', 'expired'
  claimedAt    DateTime? @map("claimed_at")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
  @@index([userId, status])
  @@index([orderId])
  @@unique([userId]) // 每个用户只能享受一次首充奖励
  @@map("first_recharge_rewards")
}

// ================================
// 邀请裂变系统相关模型 (Invitation & Referral System)
// ================================

// 邀请关系表
model ReferralRelationships {
  id                String    @id @default(uuid()) @db.Uuid
  referrerUserId    String    @map("referrer_user_id") @db.Uuid // 邀请人ID
  referredUserId    String    @map("referred_user_id") @db.Uuid // 被邀请人ID
  referralCode      String    @map("referral_code") @db.VarChar(10) // 邀请码
  rewardAmount      Decimal   @default(0) @map("reward_amount") @db.Decimal(10, 2) // 奖励金额
  status            String    @default("pending") @db.VarChar(20) // 'pending', 'completed', 'cancelled'
  createdAt         DateTime  @default(now()) @map("created_at")
  completedAt       DateTime? @map("completed_at") @db.Timestamptz
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@index([referrerUserId])
  @@index([referredUserId])
  @@index([status])
  @@unique([referredUserId]) // 每个用户只能被邀请一次
  @@map("referral_relationships")
}

// 邀请奖励记录表
model InvitationRewards {
  id                    String    @id @default(uuid()) @db.Uuid
  referrerUserId        String    @map("referrer_user_id") @db.Uuid // 邀请人ID
  referredUserId        String    @map("referred_user_id") @db.Uuid // 被邀请人ID
  referralRelationshipId String?  @map("referral_relationship_id") @db.Uuid // 邀请关系ID
  rewardType            String    @map("reward_type") @db.VarChar(50) // 'first_recharge', 'commission'
  rewardAmount          Decimal   @default(0) @map("reward_amount") @db.Decimal(10, 2) // 奖励金额
  currency              String    @default("TJS") @db.VarChar(10) // 货币类型
  relatedOrderId        String?   @map("related_order_id") @db.Uuid // 关联订单ID
  description           String?   @db.Text // 奖励描述
  isClaimed             Boolean   @default(false) @map("is_claimed") // 是否已领取
  claimedAt             DateTime? @map("claimed_at") @db.Timestamptz // 领取时间
  expiresAt             DateTime? @map("expires_at") @db.Timestamptz // 过期时间
  status                String    @default("available") @db.VarChar(20) // 'available', 'claimed', 'expired'
  createdAt             DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt             DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@index([referrerUserId])
  @@index([referredUserId])
  @@index([referralRelationshipId])
  @@index([rewardType])
  @@index([isClaimed])
  @@index([expiresAt])
  @@map("invitation_rewards")
}

// ================================
// 晒单系统相关模型 (Show-off System)
// ================================

// 晒单帖子表
model ShowOffPosts {
  id                    String    @id @default(uuid()) @db.Uuid
  userId                String    @map("user_id") @db.Uuid
  roundId               String    @map("round_id") @db.Uuid              // 关联抽奖轮次
  participationId       String    @map("participation_id") @db.Uuid       // 关联参与记录
  
  // 晒单内容
  content               String?   @db.Text
  images                Json?     @db.JsonB                          // 图片URL数组
  
  // 统计数据
  likeCount             Int       @default(0) @map("like_count")
  commentCount          Int       @default(0) @map("comment_count")
  shareCount            Int       @default(0) @map("share_count")
  viewCount             Int       @default(0) @map("view_count")
  
  // 奖励相关
  coinRewarded          Boolean   @default(false) @map("coin_rewarded")
  coinRewardAmount      Decimal   @default(3.0) @map("coin_reward_amount") @db.Decimal(10, 2)
  coinRewardedAt        DateTime? @map("coin_rewarded_at")
  
  // 审核状态
  status                String    @default("pending") @db.VarChar(20)    // pending, approved, rejected
  reviewedBy            String?   @map("reviewed_by") @db.Uuid
  reviewedAt            DateTime? @map("reviewed_at")
  rejectReason          String?   @map("reject_reason") @db.Text
  autoReviewPassed      Boolean?  @map("auto_review_passed")
  autoReviewReason      String?   @map("auto_review_reason") @db.Text
  
  // 热度算法
  hotScore              Decimal   @default(0) @map("hot_score") @db.Decimal(10, 2)
  
  createdAt             DateTime  @default(now()) @map("created_at")
  updatedAt             DateTime  @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
  @@index([roundId])
  @@index([status])
  @@index([createdAt])
  @@index([hotScore])
  @@unique([participationId]) // 每个中奖参与记录只能晒单一次
  @@map("show_off_posts")
}

// 晒单点赞表
model ShowOffLikes {
  id            String    @id @default(uuid()) @db.Uuid
  postId        String    @map("post_id") @db.Uuid
  userId        String    @map("user_id") @db.Uuid
  createdAt     DateTime  @default(now()) @map("created_at")

  @@index([postId])
  @@index([userId])
  @@unique([postId, userId])
  @@map("show_off_likes")
}

// 晒单评论表
model ShowOffComments {
  id                String    @id @default(uuid()) @db.Uuid
  postId            String    @map("post_id") @db.Uuid
  userId            String    @map("user_id") @db.Uuid
  content           String    @db.Text
  parentCommentId   String?   @map("parent_comment_id") @db.Uuid
  likeCount         Int       @default(0) @map("like_count")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at")

  @@index([postId])
  @@index([userId])
  @@index([parentCommentId])
  @@index([createdAt])
  @@map("show_off_comments")
}

// 晒单评论点赞表
model ShowOffCommentLikes {
  id            String    @id @default(uuid()) @db.Uuid
  commentId     String    @map("comment_id") @db.Uuid
  userId        String    @map("user_id") @db.Uuid
  createdAt     DateTime  @default(now()) @map("created_at")

  @@index([commentId])
  @@index([userId])
  @@unique([commentId, userId])
  @@map("show_off_comment_likes")
}

// ================================
// 财务数据统计系统相关模型 (Financial Statistics System)
// ================================

// 收入统计表
model RevenueStatistics {
  id                String    @id @default(uuid()) @db.Uuid
  periodType        String    @map("period_type") @db.VarChar(20) // 'daily', 'weekly', 'monthly', 'quarterly'
  periodStart       DateTime  @map("period_start") @db.Date
  periodEnd         DateTime  @map("period_end") @db.Date
  totalRevenue      Decimal   @default(0) @map("total_revenue") @db.Decimal(12, 2) // 总收入
  actualReceived    Decimal   @default(0) @map("actual_received") @db.Decimal(12, 2) // 实际到账
  orderCount        Int       @default(0) @map("order_count") // 订单数量
  averageOrderValue Decimal   @default(0) @map("average_order_value") @db.Decimal(10, 2) // 平均客单价
  growthRate        Decimal?  @map("growth_rate") @db.Decimal(5, 2) // 环比增长率
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at")

  @@index([periodType, periodStart])
  @@index([periodType, periodEnd])
  @@unique([periodType, periodStart])
  @@map("revenue_statistics")
}

// 成本细分表
model CostBreakdown {
  id              String    @id @default(uuid()) @db.Uuid
  costType        String    @map("cost_type") @db.VarChar(50) // 'incentive', 'prize', 'operation', 'platform'
  costCategory    String    @map("cost_category") @db.VarChar(100) // 成本类别
  periodType      String    @map("period_type") @db.VarChar(20) // 'daily', 'weekly', 'monthly', 'quarterly'
  periodStart     DateTime  @map("period_start") @db.Date
  periodEnd       DateTime  @map("period_end") @db.Date
  amount          Decimal   @db.Decimal(12, 2) // 成本金额
  description     String?   @db.Text // 成本描述
  relatedBusiness String?   @map("related_business") @db.VarChar(255) // 相关业务
  orderCount      Int       @default(0) @map("order_count") // 涉及订单数量
  userCount       Int       @default(0) @map("user_count") // 涉及用户数量
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @default(now()) @updatedAt @map("updated_at")

  @@index([costType, periodType, periodStart])
  @@index([periodType, periodEnd])
  @@unique([costType, costCategory, periodType, periodStart])
  @@map("cost_breakdown")
}

// 利润分析表
model ProfitAnalysis {
  id                String    @id @default(uuid()) @db.Uuid
  periodType        String    @map("period_type") @db.VarChar(20) // 'daily', 'weekly', 'monthly', 'quarterly'
  periodStart       DateTime  @map("period_start") @db.Date
  periodEnd         DateTime  @map("period_end") @db.Date
  grossRevenue      Decimal   @default(0) @map("gross_revenue") @db.Decimal(12, 2) // 毛收入
  totalCosts        Decimal   @default(0) @map("total_costs") @db.Decimal(12, 2) // 总成本
  grossProfit       Decimal   @default(0) @map("gross_profit") @db.Decimal(12, 2) // 毛利润
  netProfit         Decimal   @default(0) @map("net_profit") @db.Decimal(12, 2) // 净利润
  grossProfitMargin Decimal   @default(0) @map("gross_profit_margin") @db.Decimal(5, 2) // 毛利率
  netProfitMargin   Decimal   @default(0) @map("net_profit_margin") @db.Decimal(5, 2) // 净利率
  costRatio         Decimal   @default(0) @map("cost_ratio") @db.Decimal(5, 2) // 成本占比
  profitGrowthRate  Decimal?  @map("profit_growth_rate") @db.Decimal(5, 2) // 利润增长率
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at")

  @@index([periodType, periodStart])
  @@index([periodType, periodEnd])
  @@unique([periodType, periodStart])
  @@map("profit_analysis")
}

// 提现统计表
model WithdrawalRecords {
  id              String    @id @default(uuid()) @db.Uuid
  periodType      String    @map("period_type") @db.VarChar(20) // 'daily', 'weekly', 'monthly', 'quarterly'
  periodStart     DateTime  @map("period_start") @db.Date
  periodEnd       DateTime  @map("period_end") @db.Date
  totalAmount     Decimal   @default(0) @map("total_amount") @db.Decimal(12, 2) // 提现总额
  totalUsers      Int       @default(0) @map("total_users") // 提现人数
  averageAmount   Decimal   @default(0) @map("average_amount") @db.Decimal(10, 2) // 平均提现金额
  platformFee     Decimal   @default(0) @map("platform_fee") @db.Decimal(10, 2) // 平台手续费收入
  withdrawalCount Int       @default(0) @map("withdrawal_count") // 提现笔数
  successCount    Int       @default(0) @map("success_count") // 成功笔数
  failureCount    Int       @default(0) @map("failure_count") // 失败笔数
  successRate     Decimal   @default(0) @map("success_rate") @db.Decimal(5, 2) // 成功率
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @default(now()) @updatedAt @map("updated_at")

  @@index([periodType, periodStart])
  @@index([periodType, periodEnd])
  @@unique([periodType, periodStart])
  @@map("withdrawal_records")
}

// 财务报表表
model FinancialReports {
  id              String    @id @default(uuid()) @db.Uuid
  reportType      String    @map("report_type") @db.VarChar(20) // 'monthly', 'quarterly', 'yearly'
  reportPeriod    String    @map("report_period") @db.VarChar(20) // '2024-10', '2024-Q4', '2024'
  title           String    @db.VarChar(255) // 报告标题
  summary         String?   @db.Text // 报告摘要
  revenueData     Json?     @map("revenue_data") @db.JsonB // 收入数据
  costData        Json?     @map("cost_data") @db.JsonB // 成本数据
  profitData      Json?     @map("profit_data") @db.JsonB // 利润数据
  withdrawalData  Json?     @map("withdrawal_data") @db.JsonB // 提现数据
  keyMetrics      Json?     @map("key_metrics") @db.JsonB // 关键指标
  trends          Json?     @db.JsonB // 趋势分析
  recommendations String?   @db.Text // 建议
  status          String    @default("draft") @db.VarChar(20) // 'draft', 'published', 'archived'
  generatedBy     String?   @map("generated_by") @db.VarChar(255) // 生成人
  publishedAt     DateTime? @map("published_at")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @default(now()) @updatedAt @map("updated_at")

  @@index([reportType, reportPeriod])
  @@index([status])
  @@unique([reportType, reportPeriod])
  @@map("financial_reports")
}


// ================================
// 管理员权限管理系统 (Admin Permission Management System)
// ================================

// 管理员权限表
model adminPermissions {
  id             String    @id @default(uuid()) @db.Uuid
  adminId        String    @map("admin_id") @db.Uuid
  resource       String    @db.VarChar(50) // 'users', 'products', 'orders', 'withdrawals', 'reports', 'settings'
  action         String    @db.VarChar(20) // 'read', 'write', 'delete', 'manage', 'approve'
  permissionName String?   @map("permission_name") @db.VarChar(100)
  grantedBy      String    @map("granted_by") @db.Uuid
  createdAt      DateTime  @default(now()) @map("created_at")
  expiresAt      DateTime? @map("expires_at")

  @@unique([adminId, resource, action])
  @@index([adminId])
  @@index([resource, action])
  @@index([expiresAt])
  @@map("admin_permissions")
}

// ================================
// 组织架构管理系统 (Organization Structure Management System)
// ================================

// 部门表
model orgDepartments {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @unique @db.VarChar(50)
  description String?  @db.VarChar(255)
  parentId    String?  @map("parent_id") @db.Uuid
  sortOrder   Int      @default(0) @map("sort_order")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@index([parentId])
  @@index([isActive])
  @@index([sortOrder])
  @@map("org_departments")
}

// 角色表
model orgRoles {
  id           String   @id @default(uuid()) @db.Uuid
  departmentId String?  @map("department_id") @db.Uuid
  name         String   @unique @db.VarChar(50)
  description  String?  @db.VarChar(255)
  permissions  Json?    @db.JsonB // 角色权限配置JSON
  sortOrder    Int      @default(0) @map("sort_order")
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@index([departmentId])
  @@index([isActive])
  @@index([sortOrder])
  @@map("org_roles")
}

// 角色权限关联表
model rolePermissions {
  id             String   @id @default(uuid()) @db.Uuid
  roleId         String   @map("role_id") @db.Uuid
  resource       String   @db.VarChar(50) // 'users', 'products', 'orders', 'withdrawals'
  action         String   @db.VarChar(20) // 'read', 'write', 'delete', 'manage', 'approve'
  permissionCode String   @map("permission_code") @db.VarChar(100)
  createdAt      DateTime @default(now()) @map("created_at")

  @@unique([roleId, resource, action])
  @@index([roleId])
  @@index([resource, action])
  @@map("role_permissions")
}

// ================================
// Telegram Bot管理系统 (Telegram Bot Management System)
// ================================

// Bot推送模板表
model botPushTemplates {
  id          String   @id @default(uuid()) @db.Uuid
  messageType String   @map("message_type") @db.VarChar(50) // 'order_confirm', 'payment_success', 'lottery_win', 'withdrawal_process'
  language    String   @default("zh") @db.VarChar(10) // 'zh', 'en', 'ru', 'tg'
  template    String   @db.Text // 消息模板，支持变量如 {username}, {amount}
  variables   Json?    @db.JsonB // 模板变量配置和说明
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@unique([messageType, language])
  @@index([messageType, language])
  @@index([isActive])
  @@map("bot_push_templates")
}

// Bot推送历史表
model botPushHistory {
  id           String   @id @default(uuid()) @db.Uuid
  userId       String?  @map("user_id") @db.Uuid
  messageType  String   @map("message_type") @db.VarChar(50)
  targetChat   String   @map("target_chat") @db.VarChar(100) // Telegram Chat ID
  sendStatus   String   @map("send_status") @db.VarChar(20) // 'pending', 'sent', 'failed', 'retry'
  sendTime     DateTime @default(now()) @map("send_time")
  content      String?  @db.Text // 实际发送的消息内容
  pushId       String?  @map("push_id") @db.VarChar(40) // Telegram消息ID
  errorMessage String?  @map("error_message") @db.Text
  retryCount   Int      @default(0) @map("retry_count")

  @@index([userId])
  @@index([messageType])
  @@index([sendStatus])
  @@index([sendTime])
  @@index([targetChat])
  @@map("bot_push_history")
}

// Bot状态监控表
model botStatus {
  id               String    @id @default(uuid()) @db.Uuid
  botUsername      String    @unique @map("bot_username") @db.VarChar(50)
  isOnline         Boolean   @default(false) @map("is_online")
  lastHeartbeat    DateTime? @map("last_heartbeat")
  lastError        String?   @map("last_error") @db.Text
  restartCount     Int       @default(0) @map("restart_count")
  apiCallsCount    Int       @default(0) @map("api_calls_count")
  errorCount       Int       @default(0) @map("error_count")
  pushSuccessCount Int       @default(0) @map("push_success_count")
  pushFailureCount Int       @default(0) @map("push_failure_count")
  uptime           Int       @default(0) @db.Integer // 运行时间(秒)
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@index([isOnline])
  @@index([lastHeartbeat])
  @@map("bot_status")
}

// ================================
// 系统设置和运营管理 (System Settings & Operations Management)
// ================================

// 系统设置表
model systemSettings {
  id          String   @id @default(uuid()) @db.Uuid
  category    String   @db.VarChar(50) // 'user_growth', 'business', 'content', 'security', 'payment'
  key         String   @db.VarChar(100) // 配置项键名
  value       String?  @db.Text // 配置值
  valueType   String   @default("string") @map("value_type") @db.VarChar(20) // 'string', 'number', 'boolean', 'json'
  description String?  @db.Text // 配置项说明
  isActive    Boolean  @default(true) @map("is_active")
  updatedBy   String?  @map("updated_by") @db.Uuid // 最后修改人admin_id
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@unique([category, key])
  @@index([category])
  @@index([isActive])
  @@map("system_settings")
}

// 操作日志表
model operationLogs {
  id          String   @id @default(uuid()) @db.Uuid
  adminId     String   @map("admin_id") @db.Uuid
  operation   String   @db.VarChar(50) // 'create', 'update', 'delete', 'approve', 'reject', 'export'
  resource    String   @db.VarChar(50) // 'user', 'product', 'order', 'withdrawal', 'system_setting'
  resourceId  String?  @map("resource_id") @db.Uuid
  description String?  @db.Text // 操作描述
  oldValues   Json?    @map("old_values") @db.JsonB // 修改前的值
  newValues   Json?    @map("new_values") @db.JsonB // 修改后的值
  ipAddress   String?  @map("ip_address") @db.VarChar(45)
  userAgent   String?  @map("user_agent") @db.Text
  createdAt   DateTime @default(now()) @map("created_at")

  @@index([adminId])
  @@index([operation])
  @@index([resource])
  @@index([resourceId])
  @@index([createdAt])
  @@map("operation_logs")
}

// 增长指标统计表
model growthMetrics {
  id             String   @id @default(uuid()) @db.Uuid
  date           DateTime @db.Date // 统计日期
  newUsers       Int      @default(0) @map("new_users") // 新增用户数
  activeUsers    Int      @default(0) @map("active_users") // 活跃用户数
  retainedUsers  Int      @default(0) @map("retained_users") // 留存用户数
  conversionRate Decimal? @map("conversion_rate") @db.Decimal(5, 2) // 转化率(%)
  referralCount  Int      @default(0) @map("referral_count") // 邀请数
  checkInCount   Int      @default(0) @map("check_in_count") // 签到数
  tasksCompleted Int      @default(0) @map("tasks_completed") // 完成任务数
  totalRewards   Decimal? @map("total_rewards") @db.Decimal(10, 2) // 总奖励金额
  kFactor        Decimal? @map("k_factor") @db.Decimal(5, 3) // K因子(病毒系数)
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@unique([date])
  @@index([date])
  @@map("growth_metrics")
}
